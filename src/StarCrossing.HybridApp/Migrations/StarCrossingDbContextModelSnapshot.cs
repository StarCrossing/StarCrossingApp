// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StarCrossing.HybridApp;

#nullable disable

namespace StarCrossing.HybridApp.Migrations
{
    [DbContext(typeof(StarCrossingDbContext))]
    partial class StarCrossingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Building", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("LastHarvestedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<int>("Position")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Buildings");

                    b.HasDiscriminator<string>("Name").IsComplete(true).HasValue("Building");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.GameResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Resources");

                    b.HasDiscriminator<string>("Name").IsComplete(true).HasValue("GameResource");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Vassal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Element")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Nature")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Portrait")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Sign")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Species")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Willpower")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Vassals");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Farm", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.Building");

                    b.HasDiscriminator().HasValue("Farm");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Fishery", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.Building");

                    b.HasDiscriminator().HasValue("Fishery");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.GoldMine", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.Building");

                    b.HasDiscriminator().HasValue("Gold Mine");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Harbor", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.Building");

                    b.HasDiscriminator().HasValue("Harbor");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Hunter", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.Building");

                    b.HasDiscriminator().HasValue("Hunter");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.IronMine", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.Building");

                    b.HasDiscriminator().HasValue("Iron Mine");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Lumberyard", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.Building");

                    b.HasDiscriminator().HasValue("Lumberyard");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.MarbleQuarry", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.Building");

                    b.HasDiscriminator().HasValue("Marble Quarry");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Obelisk", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.Building");

                    b.HasDiscriminator().HasValue("Obelisk");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Palace", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.Building");

                    b.HasDiscriminator().HasValue("Palace");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Pasture", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.Building");

                    b.HasDiscriminator().HasValue("Pasture");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.StonePit", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.Building");

                    b.HasDiscriminator().HasValue("Stone Pit");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Temple", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.Building");

                    b.HasDiscriminator().HasValue("Temple");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.TradeDepot", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.Building");

                    b.HasDiscriminator().HasValue("Trade Depot");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Vineyard", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.Building");

                    b.HasDiscriminator().HasValue("Vineyard");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Woodsman", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.Building");

                    b.HasDiscriminator().HasValue("Woodsman");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Resources.Gold", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.GameResource");

                    b.HasDiscriminator().HasValue("Gold");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Resources.Iron", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.GameResource");

                    b.HasDiscriminator().HasValue("Iron");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Resources.Marble", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.GameResource");

                    b.HasDiscriminator().HasValue("Marble");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Resources.Meat", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.GameResource");

                    b.HasDiscriminator().HasValue("Meat");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Resources.Quintessence", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.GameResource");

                    b.HasDiscriminator().HasValue("Quintessence");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Resources.Stone", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.GameResource");

                    b.HasDiscriminator().HasValue("Stone");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Resources.Wheat", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.GameResource");

                    b.HasDiscriminator().HasValue("Wheat");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Resources.Wine", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.GameResource");

                    b.HasDiscriminator().HasValue("Wine");
                });

            modelBuilder.Entity("StarCrossing.HybridApp.Data.Resources.Wood", b =>
                {
                    b.HasBaseType("StarCrossing.HybridApp.Data.GameResource");

                    b.HasDiscriminator().HasValue("Wood");
                });
#pragma warning restore 612, 618
        }
    }
}
